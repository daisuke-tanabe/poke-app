// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "./_generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pokemon {
  id         Int           @id @default(autoincrement())
  name_ja    String
  name_kana  String
  name_en    String
  height     Float
  weight     Float
  pokedexEntries PokedexEntry[]
  typeEntries    TypeEntry[]
}

model Region {
  id      Int      @id
  name_ja String
  name_en String
  slug    String   @unique
  pokedexes Pokedex[]
}

model Pokedex {
  id        Int      @id
  region_id Int
  name_ja   String
  name_en   String
  slug      String   @unique
  region    Region   @relation(fields: [region_id], references: [id])
  entries   PokedexEntry[]
}

model PokedexEntry {
  id           Int      @id @default(autoincrement())
  pokedex_id   Int
  pokemon_id   Int
  entry_number Int
  pokemon      Pokemon  @relation(fields: [pokemon_id], references: [id], onDelete: Cascade)
  pokedex      Pokedex  @relation(fields: [pokedex_id], references: [id], onDelete: Cascade)

  @@unique([pokedex_id, entry_number])
}

model Type {
  id      Int      @id
  name_ja String
  name_en String
  slug    String   @unique
  typeEntries TypeEntry[]
}

model TypeEntry {
  pokemon_id   Int
  type_id      Int
  entry_number Int
  pokemon      Pokemon @relation(fields: [pokemon_id], references: [id], onDelete: Cascade)
  type         Type    @relation(fields: [type_id], references: [id], onDelete: Cascade)

  @@id([pokemon_id, type_id])
}
